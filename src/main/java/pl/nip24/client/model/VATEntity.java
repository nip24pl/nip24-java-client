/*
 * NIP24 Service
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.8
 * Contact: kontakt@nip24.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package pl.nip24.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import pl.nip24.client.model.VATEntityStatus;
import pl.nip24.client.model.VATPerson;
/**
 * VATEntity
 */


public class VATEntity {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("nip")
  private String nip = null;

  @JsonProperty("regon")
  private String regon = null;

  @JsonProperty("krs")
  private String krs = null;

  @JsonProperty("residenceAddress")
  private String residenceAddress = null;

  @JsonProperty("workingAddress")
  private String workingAddress = null;

  @JsonProperty("vat")
  private VATEntityStatus vat = null;

  @JsonProperty("representatives")
  private List<VATPerson> representatives = null;

  @JsonProperty("authorizedClerks")
  private List<VATPerson> authorizedClerks = null;

  @JsonProperty("partners")
  private List<VATPerson> partners = null;

  @JsonProperty("ibans")
  private List<String> ibans = new ArrayList<>();

  @JsonProperty("hasVirtualAccounts")
  private Boolean hasVirtualAccounts = null;

  @JsonProperty("registrationLegalDate")
  private LocalDate registrationLegalDate = null;

  @JsonProperty("registrationDenialDate")
  private LocalDate registrationDenialDate = null;

  @JsonProperty("registrationDenialBasis")
  private String registrationDenialBasis = null;

  @JsonProperty("restorationDate")
  private LocalDate restorationDate = null;

  @JsonProperty("restorationBasis")
  private String restorationBasis = null;

  @JsonProperty("removalDate")
  private LocalDate removalDate = null;

  @JsonProperty("removalBasis")
  private String removalBasis = null;

  public VATEntity name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public VATEntity nip(String nip) {
    this.nip = nip;
    return this;
  }

   /**
   * Get nip
   * @return nip
  **/
  @Schema(required = true, description = "")
  public String getNip() {
    return nip;
  }

  public void setNip(String nip) {
    this.nip = nip;
  }

  public VATEntity regon(String regon) {
    this.regon = regon;
    return this;
  }

   /**
   * Get regon
   * @return regon
  **/
  @Schema(description = "")
  public String getRegon() {
    return regon;
  }

  public void setRegon(String regon) {
    this.regon = regon;
  }

  public VATEntity krs(String krs) {
    this.krs = krs;
    return this;
  }

   /**
   * Get krs
   * @return krs
  **/
  @Schema(description = "")
  public String getKrs() {
    return krs;
  }

  public void setKrs(String krs) {
    this.krs = krs;
  }

  public VATEntity residenceAddress(String residenceAddress) {
    this.residenceAddress = residenceAddress;
    return this;
  }

   /**
   * Get residenceAddress
   * @return residenceAddress
  **/
  @Schema(description = "")
  public String getResidenceAddress() {
    return residenceAddress;
  }

  public void setResidenceAddress(String residenceAddress) {
    this.residenceAddress = residenceAddress;
  }

  public VATEntity workingAddress(String workingAddress) {
    this.workingAddress = workingAddress;
    return this;
  }

   /**
   * Get workingAddress
   * @return workingAddress
  **/
  @Schema(description = "")
  public String getWorkingAddress() {
    return workingAddress;
  }

  public void setWorkingAddress(String workingAddress) {
    this.workingAddress = workingAddress;
  }

  public VATEntity vat(VATEntityStatus vat) {
    this.vat = vat;
    return this;
  }

   /**
   * Get vat
   * @return vat
  **/
  @Schema(required = true, description = "")
  public VATEntityStatus getVat() {
    return vat;
  }

  public void setVat(VATEntityStatus vat) {
    this.vat = vat;
  }

  public VATEntity representatives(List<VATPerson> representatives) {
    this.representatives = representatives;
    return this;
  }

  public VATEntity addRepresentativesItem(VATPerson representativesItem) {
    if (this.representatives == null) {
      this.representatives = new ArrayList<>();
    }
    this.representatives.add(representativesItem);
    return this;
  }

   /**
   * Get representatives
   * @return representatives
  **/
  @Schema(description = "")
  public List<VATPerson> getRepresentatives() {
    return representatives;
  }

  public void setRepresentatives(List<VATPerson> representatives) {
    this.representatives = representatives;
  }

  public VATEntity authorizedClerks(List<VATPerson> authorizedClerks) {
    this.authorizedClerks = authorizedClerks;
    return this;
  }

  public VATEntity addAuthorizedClerksItem(VATPerson authorizedClerksItem) {
    if (this.authorizedClerks == null) {
      this.authorizedClerks = new ArrayList<>();
    }
    this.authorizedClerks.add(authorizedClerksItem);
    return this;
  }

   /**
   * Get authorizedClerks
   * @return authorizedClerks
  **/
  @Schema(description = "")
  public List<VATPerson> getAuthorizedClerks() {
    return authorizedClerks;
  }

  public void setAuthorizedClerks(List<VATPerson> authorizedClerks) {
    this.authorizedClerks = authorizedClerks;
  }

  public VATEntity partners(List<VATPerson> partners) {
    this.partners = partners;
    return this;
  }

  public VATEntity addPartnersItem(VATPerson partnersItem) {
    if (this.partners == null) {
      this.partners = new ArrayList<>();
    }
    this.partners.add(partnersItem);
    return this;
  }

   /**
   * Get partners
   * @return partners
  **/
  @Schema(description = "")
  public List<VATPerson> getPartners() {
    return partners;
  }

  public void setPartners(List<VATPerson> partners) {
    this.partners = partners;
  }

  public VATEntity ibans(List<String> ibans) {
    this.ibans = ibans;
    return this;
  }

  public VATEntity addIbansItem(String ibansItem) {
    this.ibans.add(ibansItem);
    return this;
  }

   /**
   * Get ibans
   * @return ibans
  **/
  @Schema(required = true, description = "")
  public List<String> getIbans() {
    return ibans;
  }

  public void setIbans(List<String> ibans) {
    this.ibans = ibans;
  }

  public VATEntity hasVirtualAccounts(Boolean hasVirtualAccounts) {
    this.hasVirtualAccounts = hasVirtualAccounts;
    return this;
  }

   /**
   * Get hasVirtualAccounts
   * @return hasVirtualAccounts
  **/
  @Schema(required = true, description = "")
  public Boolean isHasVirtualAccounts() {
    return hasVirtualAccounts;
  }

  public void setHasVirtualAccounts(Boolean hasVirtualAccounts) {
    this.hasVirtualAccounts = hasVirtualAccounts;
  }

  public VATEntity registrationLegalDate(LocalDate registrationLegalDate) {
    this.registrationLegalDate = registrationLegalDate;
    return this;
  }

   /**
   * Get registrationLegalDate
   * @return registrationLegalDate
  **/
  @Schema(required = true, description = "")
  public LocalDate getRegistrationLegalDate() {
    return registrationLegalDate;
  }

  public void setRegistrationLegalDate(LocalDate registrationLegalDate) {
    this.registrationLegalDate = registrationLegalDate;
  }

  public VATEntity registrationDenialDate(LocalDate registrationDenialDate) {
    this.registrationDenialDate = registrationDenialDate;
    return this;
  }

   /**
   * Get registrationDenialDate
   * @return registrationDenialDate
  **/
  @Schema(description = "")
  public LocalDate getRegistrationDenialDate() {
    return registrationDenialDate;
  }

  public void setRegistrationDenialDate(LocalDate registrationDenialDate) {
    this.registrationDenialDate = registrationDenialDate;
  }

  public VATEntity registrationDenialBasis(String registrationDenialBasis) {
    this.registrationDenialBasis = registrationDenialBasis;
    return this;
  }

   /**
   * Get registrationDenialBasis
   * @return registrationDenialBasis
  **/
  @Schema(description = "")
  public String getRegistrationDenialBasis() {
    return registrationDenialBasis;
  }

  public void setRegistrationDenialBasis(String registrationDenialBasis) {
    this.registrationDenialBasis = registrationDenialBasis;
  }

  public VATEntity restorationDate(LocalDate restorationDate) {
    this.restorationDate = restorationDate;
    return this;
  }

   /**
   * Get restorationDate
   * @return restorationDate
  **/
  @Schema(description = "")
  public LocalDate getRestorationDate() {
    return restorationDate;
  }

  public void setRestorationDate(LocalDate restorationDate) {
    this.restorationDate = restorationDate;
  }

  public VATEntity restorationBasis(String restorationBasis) {
    this.restorationBasis = restorationBasis;
    return this;
  }

   /**
   * Get restorationBasis
   * @return restorationBasis
  **/
  @Schema(description = "")
  public String getRestorationBasis() {
    return restorationBasis;
  }

  public void setRestorationBasis(String restorationBasis) {
    this.restorationBasis = restorationBasis;
  }

  public VATEntity removalDate(LocalDate removalDate) {
    this.removalDate = removalDate;
    return this;
  }

   /**
   * Get removalDate
   * @return removalDate
  **/
  @Schema(description = "")
  public LocalDate getRemovalDate() {
    return removalDate;
  }

  public void setRemovalDate(LocalDate removalDate) {
    this.removalDate = removalDate;
  }

  public VATEntity removalBasis(String removalBasis) {
    this.removalBasis = removalBasis;
    return this;
  }

   /**
   * Get removalBasis
   * @return removalBasis
  **/
  @Schema(description = "")
  public String getRemovalBasis() {
    return removalBasis;
  }

  public void setRemovalBasis(String removalBasis) {
    this.removalBasis = removalBasis;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VATEntity vaTEntity = (VATEntity) o;
    return Objects.equals(this.name, vaTEntity.name) &&
        Objects.equals(this.nip, vaTEntity.nip) &&
        Objects.equals(this.regon, vaTEntity.regon) &&
        Objects.equals(this.krs, vaTEntity.krs) &&
        Objects.equals(this.residenceAddress, vaTEntity.residenceAddress) &&
        Objects.equals(this.workingAddress, vaTEntity.workingAddress) &&
        Objects.equals(this.vat, vaTEntity.vat) &&
        Objects.equals(this.representatives, vaTEntity.representatives) &&
        Objects.equals(this.authorizedClerks, vaTEntity.authorizedClerks) &&
        Objects.equals(this.partners, vaTEntity.partners) &&
        Objects.equals(this.ibans, vaTEntity.ibans) &&
        Objects.equals(this.hasVirtualAccounts, vaTEntity.hasVirtualAccounts) &&
        Objects.equals(this.registrationLegalDate, vaTEntity.registrationLegalDate) &&
        Objects.equals(this.registrationDenialDate, vaTEntity.registrationDenialDate) &&
        Objects.equals(this.registrationDenialBasis, vaTEntity.registrationDenialBasis) &&
        Objects.equals(this.restorationDate, vaTEntity.restorationDate) &&
        Objects.equals(this.restorationBasis, vaTEntity.restorationBasis) &&
        Objects.equals(this.removalDate, vaTEntity.removalDate) &&
        Objects.equals(this.removalBasis, vaTEntity.removalBasis);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, nip, regon, krs, residenceAddress, workingAddress, vat, representatives, authorizedClerks, partners, ibans, hasVirtualAccounts, registrationLegalDate, registrationDenialDate, registrationDenialBasis, restorationDate, restorationBasis, removalDate, removalBasis);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VATEntity {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nip: ").append(toIndentedString(nip)).append("\n");
    sb.append("    regon: ").append(toIndentedString(regon)).append("\n");
    sb.append("    krs: ").append(toIndentedString(krs)).append("\n");
    sb.append("    residenceAddress: ").append(toIndentedString(residenceAddress)).append("\n");
    sb.append("    workingAddress: ").append(toIndentedString(workingAddress)).append("\n");
    sb.append("    vat: ").append(toIndentedString(vat)).append("\n");
    sb.append("    representatives: ").append(toIndentedString(representatives)).append("\n");
    sb.append("    authorizedClerks: ").append(toIndentedString(authorizedClerks)).append("\n");
    sb.append("    partners: ").append(toIndentedString(partners)).append("\n");
    sb.append("    ibans: ").append(toIndentedString(ibans)).append("\n");
    sb.append("    hasVirtualAccounts: ").append(toIndentedString(hasVirtualAccounts)).append("\n");
    sb.append("    registrationLegalDate: ").append(toIndentedString(registrationLegalDate)).append("\n");
    sb.append("    registrationDenialDate: ").append(toIndentedString(registrationDenialDate)).append("\n");
    sb.append("    registrationDenialBasis: ").append(toIndentedString(registrationDenialBasis)).append("\n");
    sb.append("    restorationDate: ").append(toIndentedString(restorationDate)).append("\n");
    sb.append("    restorationBasis: ").append(toIndentedString(restorationBasis)).append("\n");
    sb.append("    removalDate: ").append(toIndentedString(removalDate)).append("\n");
    sb.append("    removalBasis: ").append(toIndentedString(removalBasis)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
