/*
 * NIP24 Service
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.8
 * Contact: kontakt@nip24.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package pl.nip24.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import pl.nip24.client.model.Skonto;
import pl.nip24.client.model.TRachunekBankowy;
import pl.nip24.client.model.TerminPlatnosci;
import pl.nip24.client.model.ZaplataCzesciowa;
/**
 * Warunki płatności
 */
@Schema(description = "Warunki płatności")

public class Platnosc {
  @JsonProperty("Zaplacono")
  private Integer zaplacono = null;

  @JsonProperty("DataZaplaty")
  private LocalDate dataZaplaty = null;

  @JsonProperty("ZnacznikZaplatyCzesciowej")
  private Integer znacznikZaplatyCzesciowej = null;

  @JsonProperty("ZaplataCzesciowa")
  private List<ZaplataCzesciowa> zaplataCzesciowa = null;

  @JsonProperty("TerminPlatnosci")
  private List<TerminPlatnosci> terminPlatnosci = null;

  @JsonProperty("FormaPlatnosci")
  private Integer formaPlatnosci = null;

  @JsonProperty("PlatnoscInna")
  private Integer platnoscInna = null;

  @JsonProperty("OpisPlatnosci")
  private String opisPlatnosci = null;

  @JsonProperty("RachunekBankowy")
  private List<TRachunekBankowy> rachunekBankowy = null;

  @JsonProperty("RachunekBankowyFaktora")
  private List<TRachunekBankowy> rachunekBankowyFaktora = null;

  @JsonProperty("Skonto")
  private Skonto skonto = null;

  public Platnosc zaplacono(Integer zaplacono) {
    this.zaplacono = zaplacono;
    return this;
  }

   /**
   * Get zaplacono
   * @return zaplacono
  **/
  @Schema(description = "")
  public Integer getZaplacono() {
    return zaplacono;
  }

  public void setZaplacono(Integer zaplacono) {
    this.zaplacono = zaplacono;
  }

  public Platnosc dataZaplaty(LocalDate dataZaplaty) {
    this.dataZaplaty = dataZaplaty;
    return this;
  }

   /**
   * Get dataZaplaty
   * @return dataZaplaty
  **/
  @Schema(description = "")
  public LocalDate getDataZaplaty() {
    return dataZaplaty;
  }

  public void setDataZaplaty(LocalDate dataZaplaty) {
    this.dataZaplaty = dataZaplaty;
  }

  public Platnosc znacznikZaplatyCzesciowej(Integer znacznikZaplatyCzesciowej) {
    this.znacznikZaplatyCzesciowej = znacznikZaplatyCzesciowej;
    return this;
  }

   /**
   * Get znacznikZaplatyCzesciowej
   * @return znacznikZaplatyCzesciowej
  **/
  @Schema(description = "")
  public Integer getZnacznikZaplatyCzesciowej() {
    return znacznikZaplatyCzesciowej;
  }

  public void setZnacznikZaplatyCzesciowej(Integer znacznikZaplatyCzesciowej) {
    this.znacznikZaplatyCzesciowej = znacznikZaplatyCzesciowej;
  }

  public Platnosc zaplataCzesciowa(List<ZaplataCzesciowa> zaplataCzesciowa) {
    this.zaplataCzesciowa = zaplataCzesciowa;
    return this;
  }

  public Platnosc addZaplataCzesciowaItem(ZaplataCzesciowa zaplataCzesciowaItem) {
    if (this.zaplataCzesciowa == null) {
      this.zaplataCzesciowa = new ArrayList<>();
    }
    this.zaplataCzesciowa.add(zaplataCzesciowaItem);
    return this;
  }

   /**
   * Get zaplataCzesciowa
   * @return zaplataCzesciowa
  **/
  @Schema(description = "")
  public List<ZaplataCzesciowa> getZaplataCzesciowa() {
    return zaplataCzesciowa;
  }

  public void setZaplataCzesciowa(List<ZaplataCzesciowa> zaplataCzesciowa) {
    this.zaplataCzesciowa = zaplataCzesciowa;
  }

  public Platnosc terminPlatnosci(List<TerminPlatnosci> terminPlatnosci) {
    this.terminPlatnosci = terminPlatnosci;
    return this;
  }

  public Platnosc addTerminPlatnosciItem(TerminPlatnosci terminPlatnosciItem) {
    if (this.terminPlatnosci == null) {
      this.terminPlatnosci = new ArrayList<>();
    }
    this.terminPlatnosci.add(terminPlatnosciItem);
    return this;
  }

   /**
   * Get terminPlatnosci
   * @return terminPlatnosci
  **/
  @Schema(description = "")
  public List<TerminPlatnosci> getTerminPlatnosci() {
    return terminPlatnosci;
  }

  public void setTerminPlatnosci(List<TerminPlatnosci> terminPlatnosci) {
    this.terminPlatnosci = terminPlatnosci;
  }

  public Platnosc formaPlatnosci(Integer formaPlatnosci) {
    this.formaPlatnosci = formaPlatnosci;
    return this;
  }

   /**
   * Get formaPlatnosci
   * @return formaPlatnosci
  **/
  @Schema(description = "")
  public Integer getFormaPlatnosci() {
    return formaPlatnosci;
  }

  public void setFormaPlatnosci(Integer formaPlatnosci) {
    this.formaPlatnosci = formaPlatnosci;
  }

  public Platnosc platnoscInna(Integer platnoscInna) {
    this.platnoscInna = platnoscInna;
    return this;
  }

   /**
   * Get platnoscInna
   * @return platnoscInna
  **/
  @Schema(description = "")
  public Integer getPlatnoscInna() {
    return platnoscInna;
  }

  public void setPlatnoscInna(Integer platnoscInna) {
    this.platnoscInna = platnoscInna;
  }

  public Platnosc opisPlatnosci(String opisPlatnosci) {
    this.opisPlatnosci = opisPlatnosci;
    return this;
  }

   /**
   * Get opisPlatnosci
   * @return opisPlatnosci
  **/
  @Schema(description = "")
  public String getOpisPlatnosci() {
    return opisPlatnosci;
  }

  public void setOpisPlatnosci(String opisPlatnosci) {
    this.opisPlatnosci = opisPlatnosci;
  }

  public Platnosc rachunekBankowy(List<TRachunekBankowy> rachunekBankowy) {
    this.rachunekBankowy = rachunekBankowy;
    return this;
  }

  public Platnosc addRachunekBankowyItem(TRachunekBankowy rachunekBankowyItem) {
    if (this.rachunekBankowy == null) {
      this.rachunekBankowy = new ArrayList<>();
    }
    this.rachunekBankowy.add(rachunekBankowyItem);
    return this;
  }

   /**
   * Get rachunekBankowy
   * @return rachunekBankowy
  **/
  @Schema(description = "")
  public List<TRachunekBankowy> getRachunekBankowy() {
    return rachunekBankowy;
  }

  public void setRachunekBankowy(List<TRachunekBankowy> rachunekBankowy) {
    this.rachunekBankowy = rachunekBankowy;
  }

  public Platnosc rachunekBankowyFaktora(List<TRachunekBankowy> rachunekBankowyFaktora) {
    this.rachunekBankowyFaktora = rachunekBankowyFaktora;
    return this;
  }

  public Platnosc addRachunekBankowyFaktoraItem(TRachunekBankowy rachunekBankowyFaktoraItem) {
    if (this.rachunekBankowyFaktora == null) {
      this.rachunekBankowyFaktora = new ArrayList<>();
    }
    this.rachunekBankowyFaktora.add(rachunekBankowyFaktoraItem);
    return this;
  }

   /**
   * Get rachunekBankowyFaktora
   * @return rachunekBankowyFaktora
  **/
  @Schema(description = "")
  public List<TRachunekBankowy> getRachunekBankowyFaktora() {
    return rachunekBankowyFaktora;
  }

  public void setRachunekBankowyFaktora(List<TRachunekBankowy> rachunekBankowyFaktora) {
    this.rachunekBankowyFaktora = rachunekBankowyFaktora;
  }

  public Platnosc skonto(Skonto skonto) {
    this.skonto = skonto;
    return this;
  }

   /**
   * Get skonto
   * @return skonto
  **/
  @Schema(description = "")
  public Skonto getSkonto() {
    return skonto;
  }

  public void setSkonto(Skonto skonto) {
    this.skonto = skonto;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Platnosc platnosc = (Platnosc) o;
    return Objects.equals(this.zaplacono, platnosc.zaplacono) &&
        Objects.equals(this.dataZaplaty, platnosc.dataZaplaty) &&
        Objects.equals(this.znacznikZaplatyCzesciowej, platnosc.znacznikZaplatyCzesciowej) &&
        Objects.equals(this.zaplataCzesciowa, platnosc.zaplataCzesciowa) &&
        Objects.equals(this.terminPlatnosci, platnosc.terminPlatnosci) &&
        Objects.equals(this.formaPlatnosci, platnosc.formaPlatnosci) &&
        Objects.equals(this.platnoscInna, platnosc.platnoscInna) &&
        Objects.equals(this.opisPlatnosci, platnosc.opisPlatnosci) &&
        Objects.equals(this.rachunekBankowy, platnosc.rachunekBankowy) &&
        Objects.equals(this.rachunekBankowyFaktora, platnosc.rachunekBankowyFaktora) &&
        Objects.equals(this.skonto, platnosc.skonto);
  }

  @Override
  public int hashCode() {
    return Objects.hash(zaplacono, dataZaplaty, znacznikZaplatyCzesciowej, zaplataCzesciowa, terminPlatnosci, formaPlatnosci, platnoscInna, opisPlatnosci, rachunekBankowy, rachunekBankowyFaktora, skonto);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Platnosc {\n");
    
    sb.append("    zaplacono: ").append(toIndentedString(zaplacono)).append("\n");
    sb.append("    dataZaplaty: ").append(toIndentedString(dataZaplaty)).append("\n");
    sb.append("    znacznikZaplatyCzesciowej: ").append(toIndentedString(znacznikZaplatyCzesciowej)).append("\n");
    sb.append("    zaplataCzesciowa: ").append(toIndentedString(zaplataCzesciowa)).append("\n");
    sb.append("    terminPlatnosci: ").append(toIndentedString(terminPlatnosci)).append("\n");
    sb.append("    formaPlatnosci: ").append(toIndentedString(formaPlatnosci)).append("\n");
    sb.append("    platnoscInna: ").append(toIndentedString(platnoscInna)).append("\n");
    sb.append("    opisPlatnosci: ").append(toIndentedString(opisPlatnosci)).append("\n");
    sb.append("    rachunekBankowy: ").append(toIndentedString(rachunekBankowy)).append("\n");
    sb.append("    rachunekBankowyFaktora: ").append(toIndentedString(rachunekBankowyFaktora)).append("\n");
    sb.append("    skonto: ").append(toIndentedString(skonto)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
