/*
 * NIP24 Service
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.5
 * Contact: kontakt@nip24.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package pl.nip24.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import pl.nip24.client.model.Adres;
import pl.nip24.client.model.Siedziba;
/**
 * SiedzibaIAdres
 */


public class SiedzibaIAdres {
  @JsonProperty("adresPocztyElektronicznej")
  private String adresPocztyElektronicznej = null;

  @JsonProperty("adresStronyInternetowej")
  private String adresStronyInternetowej = null;

  @JsonProperty("siedziba")
  private Siedziba siedziba = null;

  @JsonProperty("adres")
  private Adres adres = null;

  public SiedzibaIAdres adresPocztyElektronicznej(String adresPocztyElektronicznej) {
    this.adresPocztyElektronicznej = adresPocztyElektronicznej;
    return this;
  }

   /**
   * Get adresPocztyElektronicznej
   * @return adresPocztyElektronicznej
  **/
  @Schema(description = "")
  public String getAdresPocztyElektronicznej() {
    return adresPocztyElektronicznej;
  }

  public void setAdresPocztyElektronicznej(String adresPocztyElektronicznej) {
    this.adresPocztyElektronicznej = adresPocztyElektronicznej;
  }

  public SiedzibaIAdres adresStronyInternetowej(String adresStronyInternetowej) {
    this.adresStronyInternetowej = adresStronyInternetowej;
    return this;
  }

   /**
   * Get adresStronyInternetowej
   * @return adresStronyInternetowej
  **/
  @Schema(description = "")
  public String getAdresStronyInternetowej() {
    return adresStronyInternetowej;
  }

  public void setAdresStronyInternetowej(String adresStronyInternetowej) {
    this.adresStronyInternetowej = adresStronyInternetowej;
  }

  public SiedzibaIAdres siedziba(Siedziba siedziba) {
    this.siedziba = siedziba;
    return this;
  }

   /**
   * Get siedziba
   * @return siedziba
  **/
  @Schema(description = "")
  public Siedziba getSiedziba() {
    return siedziba;
  }

  public void setSiedziba(Siedziba siedziba) {
    this.siedziba = siedziba;
  }

  public SiedzibaIAdres adres(Adres adres) {
    this.adres = adres;
    return this;
  }

   /**
   * Get adres
   * @return adres
  **/
  @Schema(description = "")
  public Adres getAdres() {
    return adres;
  }

  public void setAdres(Adres adres) {
    this.adres = adres;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SiedzibaIAdres siedzibaIAdres = (SiedzibaIAdres) o;
    return Objects.equals(this.adresPocztyElektronicznej, siedzibaIAdres.adresPocztyElektronicznej) &&
        Objects.equals(this.adresStronyInternetowej, siedzibaIAdres.adresStronyInternetowej) &&
        Objects.equals(this.siedziba, siedzibaIAdres.siedziba) &&
        Objects.equals(this.adres, siedzibaIAdres.adres);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adresPocztyElektronicznej, adresStronyInternetowej, siedziba, adres);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SiedzibaIAdres {\n");
    
    sb.append("    adresPocztyElektronicznej: ").append(toIndentedString(adresPocztyElektronicznej)).append("\n");
    sb.append("    adresStronyInternetowej: ").append(toIndentedString(adresStronyInternetowej)).append("\n");
    sb.append("    siedziba: ").append(toIndentedString(siedziba)).append("\n");
    sb.append("    adres: ").append(toIndentedString(adres)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
