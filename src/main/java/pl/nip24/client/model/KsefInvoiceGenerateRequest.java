/*
 * NIP24 Service
 * NIP24 Service
 *
 * OpenAPI spec version: 1.3.8
 * Contact: kontakt@nip24.pl
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package pl.nip24.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import pl.nip24.client.model.Faktura;
/**
 * KsefInvoiceGenerateRequest
 */


public class KsefInvoiceGenerateRequest {
  @JsonProperty("invoice")
  private Faktura invoice = null;

  public KsefInvoiceGenerateRequest invoice(Faktura invoice) {
    this.invoice = invoice;
    return this;
  }

   /**
   * Get invoice
   * @return invoice
  **/
  @Schema(required = true, description = "")
  public Faktura getInvoice() {
    return invoice;
  }

  public void setInvoice(Faktura invoice) {
    this.invoice = invoice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KsefInvoiceGenerateRequest ksefInvoiceGenerateRequest = (KsefInvoiceGenerateRequest) o;
    return Objects.equals(this.invoice, ksefInvoiceGenerateRequest.invoice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KsefInvoiceGenerateRequest {\n");
    
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
